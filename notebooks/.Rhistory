fun = fun1,
mapping = aes(color = "fun1")
) +
layer(geom = "path",
stat = "function",
fun = fun2,
mapping = aes(color = "fun2")
) +
scale_x_continuous(limits = c(0, 10)) +
scale_color_manual(name = "Functions",
values = c("blue", "red"), # Color specification
labels = c("X^2 + X", "-X + 10"))
x + layer(geom = "path",
stat = "function",
#fun = fun1,
mapping = aes(color = "fun1")
) +
layer(geom = "path",
stat = "function",
#fun = fun2,
mapping = aes(color = "fun2")
) +
scale_x_continuous(limits = c(0, 10)) +
scale_color_manual(name = "Functions",
values = c("blue", "red"), # Color specification
labels = c("X^2 + X", "-X + 10"))
x + layer(geom = "path",
stat = "function",
data.frame = fun1,
mapping = aes(color = "fun1")
) +
layer(geom = "path",
stat = "function",
data.frame = fun2,
mapping = aes(color = "fun2")
) +
scale_x_continuous(limits = c(0, 10)) +
scale_color_manual(name = "Functions",
values = c("blue", "red"), # Color specification
labels = c("X^2 + X", "-X + 10"))
x + layer(geom = "path",
stat = "function",
data = fun1,
mapping = aes(color = "fun1")
) +
layer(geom = "path",
stat = "function",
data = fun2,
mapping = aes(color = "fun2")
) +
scale_x_continuous(limits = c(0, 10)) +
scale_color_manual(name = "Functions",
values = c("blue", "red"), # Color specification
labels = c("X^2 + X", "-X + 10"))
x + layer(geom = "path",
stat = "function",
data = fun1,
mapping = aes(color = "fun1"),
position = "identity"
) +
layer(geom = "path",
stat = "function",
data = fun2,
mapping = aes(color = "fun2"),
position = "identity"
) +
scale_x_continuous(limits = c(0, 10)) +
scale_color_manual(name = "Functions",
values = c("blue", "red"), # Color specification
labels = c("X^2 + X", "-X + 10"))
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
fun1 <- function(x) {((x/((1/2)^2)) * exp((-x^(2))/(2*(.5^2))))}
x <- ggplot(data = data.frame(x=0), mapping = aes(x=x))
fun2 <- function(x) {(x / exp((-x^(2))/2))}
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
fun1 <- function(x) {((x/((1/2)^(2))) * exp((-x^(2))/(2*(.5^2))))}
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
fun1 <- function(x) {(x/.25) * exp((-x^(2))/(2*(.25)))}
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
fun1 <- function(x) {(x / .25) * exp((-x^(2))/(2*(.25)))}
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
fun1 <- function(x) {(x / .25) * exp((-x^(2))/(2*(.25)))}
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
x <- seq(0,10,by=.1)
matplot(x,cbind(fun1(x),fun2(x)),type="1",col=c("blue","red"))
matplot(x,cbind(fun1(x),fun2(x)),type="l",col=c("blue","red"))
plot(fun1,0,10,add=TRUE)
plot(fun2,0,10,add=TRUE)
fun1 <- function(x) {(x / .25) * exp((-x^(2))/(2*(.25)))}
x + stat_function(fun = fun1) + xlim(0,10)
x <- ggplot(data = data.frame(x=0), mapping = aes(x=x))
fun1 <- function(x) {(x / .25) * exp((-x^(2))/(2*(.25)))}
x + stat_function(fun = fun1) + xlim(0,10)
x <- ggplot(data = data.frame(x=0), mapping = aes(x=x))
fun2 <- function(x) {(x / exp((-x^(2))/2))}
x + stat_function(fun = fun2) + xlim(0,10)
x <- ggplot(data = data.frame(x=0), mapping = aes(x=x))
fun2 <- function(x) {(x * exp((-x^(2))/2))}
x + stat_function(fun = fun2) + xlim(0,10)
x<-seq(0,10,by=.01)
matplot(x,cbind(fun1(x),fun2(X)),type="l",col=c("blue","red"))
matplot(x,cbind(fun1(x),fun2(x)),type="l",col=c("blue","red"))
fun3 <- function(x) {(x / 9) * exp((-x^(2))/(2*(9)))}
matplot(x,cbind(fun1(x),fun2(x),fun3(x)),type="l",col=c("blue","red"))
fun3 <- function(x) {(x / 4) * exp((-x^(2))/(2*(4)))}
matplot(x,cbind(fun1(x),fun2(x),fun3(x)),type="l",col=c("blue","red"))
matplot(x,cbind(fun1(x),fun2(x),fun3(x)),type="l",col=c("blue","red","green"))
fun4 <- function(x) {(1 - exp(-(x^2)/2))}
fun5 <- function(x) {(1 - exp((-x^(2))/(2*(.25))))}
fun6 <- function(x) {(1 - exp((-x^(2))/(2*(4))))}
matplot(x,cbind(fun4(x),fun5(x),fun6(x)),type="l",col=c("blue","red","green"))
qnorm(.01)
-qnorm(.01)
qnorm(.025)
-qnorm(.05)
-qnorm(.025)
-qnorm(,025)
df <- data.frame(y=seq(-5,5,by=0.01))
-qnorm(.025)
pnorm(-.92) + 1 - pnorm(.92)
-qt(.05,19)
-qt(.025,14)
-qt(.05,316)
-qchisq(.95,9)
qchisq(.95,9)
-qt(.01,19)
-qt(.05,142)
m0 <- 494
n <- 86
sig_val <- 124
se <- sig_val/sqrt(n)
alpha <- 0.05
alpha_half <- alpha/2
z_alpha_half <- -qnorm(alpha_half)
y_crit_lower <- -z_alpha_half*se + m0
y_crit_upper <- z_alpha_half*se + m0
true_means <- seq(428,560,by=0.5)
result <- data.frame(true_means=true_means,z_lower=(y_crit_lower-true_means)/se,z_upper=(y_crit_upper-true_means)/se)
head(result)
result <- result %>% mutate(beta_vals=pnorm(z_upper)-pnorm(z_lower))
head(result)
result <- result %>% mutate(power=1-beta_vals)
result %>% ggplot(aes(x=true_means,y=power)) + geom_point()
install.packages("ggplot2")
library(ggplot2)
m0 <- 494
n <- 86
sig_val <- 124
se <- sig_val/sqrt(n)
alpha <- 0.05
alpha_half <- alpha/2
z_alpha_half <- -qnorm(alpha_half)
y_crit_lower <- -z_alpha_half*se + m0
y_crit_upper <- z_alpha_half*se + m0
true_means <- seq(428,560,by=0.5)
result <- data.frame(true_means=true_means,z_lower=(y_crit_lower-true_means)/se,z_upper=(y_crit_upper-true_means)/se)
head(result)
result <- result %>% mutate(beta_vals=pnorm(z_upper)-pnorm(z_lower))
install.packages("magrittr")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("magrittr", lib.loc="~/R/win-library/3.3")
library(ggplot2)
library(magrittr)
m0 <- 494
n <- 86
sig_val <- 124
se <- sig_val/sqrt(n)
alpha <- 0.05
alpha_half <- alpha/2
z_alpha_half <- -qnorm(alpha_half)
y_crit_lower <- -z_alpha_half*se + m0
y_crit_upper <- z_alpha_half*se + m0
true_means <- seq(428,560,by=0.5)
result <- data.frame(true_means=true_means,z_lower=(y_crit_lower-true_means)/se,z_upper=(y_crit_upper-true_means)/se)
head(result)
result <- result %>% mutate(beta_vals=pnorm(z_upper)-pnorm(z_lower))
head(result)
result <- result %>% mutate(power=1-beta_vals)
result %>% ggplot(aes(x=true_means,y=power)) + geom_point()
pnorm(3.4427) - pnorm(-.3158)
# obtain sample values
SamplingDist <- do(5000)*c(sample_mean=mean(rnorm(16,100,12)))
# compute the sample mean
mean(~sample_mean,data=SamplingDist)
# compute the sample standard deviation, i.e. standard error
sd(~sample_mean,data=SamplingDist)
my_vect <- c(2,7,82.3)# type R code here
my_vect^2
swirl()
library("swirl")
swirl()
5+7
x <-5+7
x
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
0
0
info()
play()
x <- c(1,2,3,5)
y <- c(-2,3)
x + y
nxt()
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
y <- c(-1,2)
x + y
info()
play()
x <- c(1,2,3,4,5)
y <- c(-1,2)
x + y
nxt()
c(1,2,3,4) + c(0,10,100)
library("swirl")
ls()
rm(list=ls())
|
rm(list=ls())
swirl()
(z * 2 + 1000)
(z * 2 + 1000)
info()
main()
num_vect = c(.5,55,-10,6)
num_vect = c(0.5,55,-10,6)
num_vect = c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
?c
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "your_name_here")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c((1:3), c("X", "Y", "Z")))
paste(c((1:3), c("X", "Y", "Z")), sep="")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
install.packages("rmarkdown")
update.packages()
install.packages("rmarkdown")
getOption("repos")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
getOption("repos")
getOption("repos")
getOption("repos")
getOption("repos")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
remove.packages("rmarkdown", lib="~/R/win-library/3.3")
install.packages("rmarkdown")
getOption("repos")
install.packages("rmarkdown")
getOption("repos")
library("swirl")
install.packages("swirl")
library("swirl")
rm(list=ls())
swirl()
Sys.Data()
Sys.Date()
plot(cars)
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(std, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[0]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[2]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("What's up Dr. Graham!")
submit()
madlibs(place=Munich, adjective=gargantuin, noun=toilet)
mad_libs(place=Munich, adjective=gargantuin, noun=toilet)
mad_libs(Munich, gargantuin, toilet)
mad_libs(place="munich, adjective=gargantuin, noun=toilet)
mad_libs(place="munich", adjective="gargantuin", noun="toilet")
mad_libs(place="munich", adjective="gargantuin", noun="toilet")
submit()
"I" "%p%" "love" "%p%" "R!"
I "%p%" love "%p%" R!
I "%p%" love "%p%" R!
'I' "%p%" 'love' "%p%" 'R!'
'I' %p% 'love' %p% 'R!'
Sys.Date()
qnorm
args(geom_points)
install.packages("fastR2")
package("fastR2")
library("fastR2")
Sys.Date()
qnorm
args(geom_points)
library("fastR2")
Sys.Date()
qnorm
args(geom_point)
my_vect <- c(0, 15, 23, 45, 2, 76)
tail(my_vect,1)
paste("R", "is", "really", "cool")
Sys.Date()
?Sys.Date
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
install.packages("fastR2")
library(fastR2)
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- mean(avgOBP)
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
boot_t_vals[i] <- (mean(temp_x) - .3319)/(sd(temp_x)/sqrt(30))
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
library(fastR2)
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- mean(avgOBP)
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- mean(avgOBP)
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
temp_x <- sample(avgOBP,replace = TRUE)
boot_t_vals[i] <- (mean(temp_x) - .3319)/(sd(temp_x)/sqrt(30))
}
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
sd_OBP <- sd(avgOBP)
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- mean(avgOBP)
sd_OBP <- sd(avgOBP)
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
temp_x <- sample(avgOBP,replace = TRUE)
boot_t_vals[i] <- (mean(temp_x) - .3319)/(sd(temp_x)/sqrt(30))
}
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
library(ggplot2)
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- .318
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
temp_x <- sample(avgOBP,replace = TRUE)
boot_t_vals[i] <- (mean(temp_x) - .3319)/(sd(temp_x)/sqrt(30))
}
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
avgOBP <- c(0.3248563, 0.30777972, 0.31156593, 0.32081594, 0.31349677, 0.33198985,
0.29555832, 0.32400405, 0.29292773, 0.32268748, 0.29089114, 0.32254372,
0.29154266, 0.31185987, 0.32200682, 0.30378828, 0.31604346, 0.31864387,
0.30062032, 0.29176271, 0.31148366, 0.30462289, 0.30712382, 0.2961227,
0.31517774, 0.30512665, 0.32663724, 0.30269336, 0.31411759, 0.32780099)
p_mu <- .318
mean_OBP <- mean(avgOBP)
test_t <- (.3319 - p_mu)/(sd(avgOBP)/sqrt(30))
boot_t_vals <- numeric(5000)
for (i in 1:5000){
temp_x <- sample(avgOBP,replace = TRUE)
boot_t_vals[i] <- (mean(temp_x) - mean_OBP)/(sd(temp_x)/sqrt(30))
}
ggplot(data=NULL,mapping=aes(x=boot_t_vals)) + geom_histogram() + geom_vline(xintercept = test_t)
t.test(avgOBP,mu=.318,conf.level = .95)
t.test(.3319,mu=.318,conf.level = .95)
t.test(avgOBP,mu=.318,conf.level = .95)
library(tidyverse)
grads_df <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/college-majors/recent-grads.csv")
dim(grads_df)
head(grads_df)
tail(grads_df)
names(grads_df)
length(unique(grads_df$Major_category))
apply(grads_df,2,function(x) length(unique(x)))
summary(grads_df)
sum(complete.cases(grads_df))
grads_df[!complete.cases(grads_df) , ]
grads_df %>% ggplot() + geom_bar(aes(x=Major_category)) + coord_flip()
grads_df %>% ggplot() + geom_histogram(aes(x=Total))
grads_df %>% ggplot() + geom_histogram(aes(x=log10(Total)))
grads_df %>% ggplot() + geom_boxplot(aes(y=Total))
log10(median(grads_df$Total,na.rm = T))
grads_df %>% gather(Men,Women,key="Gender",value="Number") %>% ggplot() + geom_freqpoly(aes(x=log10(Number),color=Gender)) +
facet_wrap(~Major_category)
grads_df <- grads_df %>% mutate(greaterHalfWomen=ifelse(ShareWomen > 0.5,1,0))
head(grads_df)
sum(grads_df$greaterHalfWomen,na.rm = T)
grads_df %>% group_by(Major_category) %>% summarise(ghw=sum(greaterHalfWomen,na.rm = T),in_category=n())
grads_df %>% ggplot() + geom_histogram(aes(x=Median))
grads_df %>% ggplot() + geom_boxplot(aes(y=Median))
grads_df %>% ggplot() + geom_boxplot(aes(x=Major_category,y=Median)) + coord_flip()
grads_df %>% ggplot() + geom_boxplot(aes(x=Major_category,y=Median)) +
geom_hline(yintercept=mean(grads_df$Median),color="blue") +
coord_flip()
grads_df %>% group_by(Major_category) %>% summarise(mean_me=mean(Median),median_me=median(Median))
grads_df %>% gather(Median,P25th,P75th,key="quantile",value="earning") %>%
ggplot(aes(x=Rank,y=earning,color=quantile)) + geom_point()
grads_df %>% gather(Median,P25th,P75th,key="quantile",value="earning") %>%
ggplot(aes(x=Rank,y=earning,color=quantile)) + geom_point() + geom_smooth()
grads_df %>% ggplot() + geom_histogram(aes(x=Unemployment_rate))
grads_df %>% ggplot() + geom_boxplot(aes(y=Unemployment_rate))
grads_df %>% ggplot() + geom_freqpoly(aes(x=Unemployment_rate,color=Major_category))
grads_df %>% ggplot() + geom_boxplot(aes(x=Major_category,y=Unemployment_rate)) +
coord_flip()
grads_df %>% ggplot() + geom_point(aes(x=Total,y=Unemployed))
grads_df %>% ggplot() + geom_point(aes(x=Total,y=Unemployed,color=Major_category))
grads_df %>% ggplot() + geom_point(aes(x=ShareWomen,y=Unemployment_rate))
grads_df %>% ggplot() + geom_point(aes(x=ShareWomen,y=Unemployment_rate,color=Major_category))
grads_df %>% ggplot() +
geom_point(aes(x=ShareWomen,y=Unemployment_rate,color=Major_category)) +
facet_wrap(~Major_category)
students_df <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/college-majors/grad-students.csv")
grads_df %>% arrange(Major_code) %>%  head()
students_df %>% arrange(Major_code) %>%  head()
grads_df %>% arrange(Major_code) %>%  tail()
students_df %>% arrange(Major_code) %>%  tail()
names(grads_df)
names(students_df)
students_df <- students_df %>% select(-Major,-Major_category)
merged_df <- merge(grads_df,students_df,by="Major_code")
names(merged_df)
head(merged_df)
install.packages("tinytex")
xfun::session_info('rmarkdown')
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd(C:/Users/Mike Delevan/Documents/PycharmProjects/Senior-Project)
setwd(C:\Users\Mike DelevanDocuments/PycharmProjects/Senior-Project)
setwd(C:\Users\Mike Delevan\Documents\PycharmProjects\Senior-Project)
setwd('C:\Users\Mike Delevan\Documents\PycharmProjects\Senior-Project')
setwd('C:\\Users\\Mike Delevan\\Documents\\PycharmProjects\\Senior-Project')
setwd('C:/Users/Mike Delevan/Documents/PycharmProjects/Senior-Project')
setwd('C:/Users/Mike Delevan/Documents/PycharmProjects/Senior-Project')
getwd()
setwd(C:/Users/Mike Delevan/Documents/PycharmProjects/Senior-Project)
setwd("C:/Users/Mike Delevan/Documents/PycharmProjects/Senior-Project/")
setwd("C:/Users/Mike Delevan/PycharmProjects/Senior-Project/")
setwd("C:/Users/Mike Delevan/PycharmProjects/Senior-Project/notebooks")
setwd("C:/Users/Mike Delevan/PycharmProjects/Senior-Project/notebooks")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
install.packages("reticulate")
Sys.which("python")
#library(reticulate)
#use_python("C:\\Users\\Mike Delevan\\AppData\\Local\\Programs\\Python\\Python36\\python.exe")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(python.reticulate = FALSE)
#library(reticulate)
#knitr::knit_engines$set(python = reticulate::eng_python)
setwd("C:")
install.packages("ROCR")
